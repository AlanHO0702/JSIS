@model dynamic

@{
    var fields = Model.TableFields;
    var items = Model.Items;
    var totalCount = Model.TotalCount;
    var pageNumber = Model.PageNumber;
    var pageSize = Model.PageSize;
    var subRouteTemplate = ViewData["SubRouteTemplate"] as string ?? "";
    var paginationVm = ViewData["PaginationVm"] as PaginationModel;

    // 新增API路徑與單身頁路徑，從 ViewData 傳（預設值也可寫死）
    var addApiUrl = ViewData["AddApiUrl"] as string ?? "/api/SPOdOrderMain";
    var detailRouteTemplate = ViewData["SubRouteTemplate"] as string ?? "/SpodOrderSubs/{PaperNum}";
}

<style>
    body { background: #f7f9fb; }
    .container { max-width: 1100px; }
    .title-row { display: flex; justify-content: space-between; align-items: flex-end; }
    .order-count { font-size: 1rem; color: #666; margin-bottom: 6px; }
    .table { box-shadow: 0 2px 12px 0 #c3d4e6; border-radius: 16px; overflow: hidden; background: #fff; }
    .table th, .table td { vertical-align: middle !important; white-space: nowrap; font-size: 1rem; border: none; }
    .table th {
        background: linear-gradient(90deg, #e8f2fe 0%, #f3f8ff 100%);
        color: #2056ac; letter-spacing: 2px; font-weight: 600;
        border-bottom: 2px solid #bdd2f7; padding: 14px 10px;
    }
    .table tbody tr { transition: background .15s; }
    .table tbody tr:hover { background: #f0f8ff !important; }
    .table td { border-top: 1px solid #f0f3f7 !important; padding: 11px 10px; }
    .status-done { color: #29963b; background: #e5f7e6; border-radius: 8px; padding: 2px 10px; font-weight: bold; letter-spacing: 1px; font-size: 1.05em;}
    .status-pending { color: #c88400; background: #fff9e3; border-radius: 8px; padding: 2px 10px; font-weight: bold; letter-spacing: 1px; font-size: 1.05em;}
    .row-link { cursor: pointer; }
    .pagination-bar { margin: 20px 0 30px 0; }
    .pagination .page-link { color: #3a72d9; border-radius: 6px !important; margin: 0 2px; }
    .pagination .page-item.active .page-link { background: #3a72d9; color: #fff; border: none; }
    .pagination .page-item.disabled .page-link { color: #aaa; pointer-events: none; background: #f1f4f8; }
    .table-wrap {
        max-width: 100%;            /* 不會超過container寬 */
        overflow-x: auto;           /* 超過寬度自動出現橫向捲軸 */
        margin: 0 auto;             /* 水平置中 */
        background: #fff;           /* 可視需求 */
        border-radius: 16px;
        box-shadow: 0 2px 12px 0 #c3d4e6;
    }
    .table {
        min-width: 1200px;          /* 最小寬，根據欄位數量調整 */
        margin-bottom: 0;
    }
    tr.selected td, tr.selected:hover td {
        background-color: #ffe6e6 !important;
    }



</style>

<div class="container my-5">
    <div class="title-row mb-4 border-bottom pb-2">
        <div style="display:flex;align-items:center;gap:16px;">
            <h2 class="mb-0 text-primary" style="font-weight:700;letter-spacing:3px;">@ViewData["TableTitle"]</h2>
            <button id="btnAddNew" class="btn btn-primary" style="font-weight:600;">新增</button>
            <button id="btnBatchDelete" class="btn btn-danger" style="font-weight:600;">作廢</button>
        </div>
        <span class="order-count">
            共 <span style="font-weight:bold">@Model.TotalCount</span> 筆，
            顯示第 @(((Model.PageNumber - 1) * Model.PageSize) + 1)
            ~ @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) 筆
        </span>  
    </div>
    <div class="table-wrap">
        <table class="table table-hover align-middle text-center">
            <thead>
                <tr>
                    @foreach(var field in fields)
                    {
                        <th>@(string.IsNullOrWhiteSpace(field.DisplayLabel) ? field.FieldName : field.DisplayLabel)</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach(var item in items)
                {
                    // 取得 key（如 PaperNum）來組路徑
                    var paperNum = item.GetType().GetProperty("PaperNum")?.GetValue(item, null)?.ToString();
                    var rowUrl = "";
                    if (!string.IsNullOrEmpty(subRouteTemplate) && !string.IsNullOrEmpty(paperNum))
                    {
                        rowUrl = subRouteTemplate.Replace("{PaperNum}", paperNum);
                    }
                    <tr class="row-link" data-url="@rowUrl" data-paper-num="@paperNum">
                        @foreach(var field in fields)
                        {
                            var val = item.GetType().GetProperty(field.FieldName)?.GetValue(item, null);
                            <td>@val</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    <div class="pagination-bar">
        @if (paginationVm != null)
        {
            @await Html.PartialAsync("_Pagination", paginationVm)
        }
    </div>
</div>


<script>
    // 全域變數先宣告
    let selectedPaperNum = null;
    const addApiUrl = '@addApiUrl';
    const detailRouteTemplate = '@detailRouteTemplate';

    document.addEventListener("DOMContentLoaded", function () {
        // 點擊行：選取，不跳頁
        document.querySelectorAll(".row-link").forEach(function(row) {
            row.addEventListener("click", function(e) {
                // 清除前一個選取
                document.querySelectorAll(".row-link.selected").forEach(r => r.classList.remove("selected"));
                row.classList.add("selected");
                selectedPaperNum = row.getAttribute("data-paper-num");
            });

            // 雙擊行：跳單身
            row.addEventListener("dblclick", function() {
                var url = row.getAttribute("data-url");
                if(url) window.location = url;
            });
        });

        // 新增按鈕
        document.getElementById("btnAddNew").addEventListener("click", async function() {
            if(!confirm("確定要新增一張新單據？")) return;

            const resp = await fetch(addApiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({})
            });

            if(resp.ok) {
                const data = await resp.json();
                // 支援大駝峰、小駝峰
                const paperNum = data.paperNum || data.PaperNum || "";
                if(paperNum) {
                    // 用 detailRouteTemplate 替換 {PaperNum}
                    var jumpUrl = detailRouteTemplate.replace("{PaperNum}", paperNum);
                    window.location = jumpUrl;
                } else {
                    alert("新增成功，但未取得單號！");
                    location.reload();
                }
            } else {
                alert("建立失敗！");
            }
        });

        // 作廢按鈕
        document.getElementById("btnBatchDelete").addEventListener("click", async function() {
            if (!selectedPaperNum) {
                alert("請先點選一筆資料");
                return;
            }
            if (!confirm("確定要作廢這筆單據？")) return;

            let resp = await fetch(`/api/SPOdOrderMain/${selectedPaperNum}`, { method: "DELETE" });
            if (resp.ok) {
                alert("作廢成功！");
                location.reload();
            } else {
                let errorMsg = "作廢失敗！";
                try {
                    let result = await resp.json();
                    if (result.error)
                        errorMsg = result.error;
                } catch (e) { }
                alert(errorMsg);
            }
        });
    });

    window.addEventListener('pageshow', function (event) {
        // 只要是 back/forward 導航就 reload
        if (event.persisted || (window.performance && window.performance.getEntriesByType("navigation")[0]?.type === "back_forward")) {
            location.reload();
        }
    });
</script>

