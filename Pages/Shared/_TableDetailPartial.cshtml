@model dynamic
@using PcbErpApi.Helpers
@using System.Text.Json
@{
    // 單頭欄位
    var headerFields = Model.HeaderTableFields; // 可視欄位
    var headerData = Model.HeaderData; // 單頭資料 (Dictionary<string, object> 或你的單頭Model)
    // 單身
    var fields = Model.TableFields;
    var items = Model.Items;
    var tableTitle = ViewData["TableTitle"] as string ?? "";
    var showRowNumber = ViewData["ShowRowNumber"] as bool? ?? true;
    var headerFieldsList = ((IEnumerable<TableFieldViewModel>)Model.HeaderTableFields).ToList();

    var groupedTabs = headerFieldsList
        .Where(f => (f.iShowWhere ?? 1) > 0) // ➜ 過濾掉 iShowWhere 為 0 的欄位
        .GroupBy(f => f.iShowWhere ?? 1)
        .OrderBy(g => g.Key)
        .ToDictionary(g => g.Key, g => g.ToList());

    var lookupMap = ViewData["LookupDisplayMap"] as Dictionary<string, Dictionary<string, string>>;

    var PaperNum = headerData.ContainsKey("PaperNum") ? headerData["PaperNum"]?.ToString() ?? "" : "";

    var headerLookupMap = ViewData["HeaderLookupMap"] as Dictionary<string, string>;
    
}

<div class="erp-detail-container">
    <div class="erp-title">
        @tableTitle
    </div>
        <!-- 單頭可編輯表單 -->
        <form id="orderHeaderForm" class="erp-header-form mb-4">
        <div class="row">
            <!-- ✅ Tabs 切換列 -->
            <ul class="nav nav-tabs" id="headerTabs" role="tablist">
                @foreach (var tab in groupedTabs.Keys)
                {
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(tab == 1 ? "active" : "")"
                                id="tab-@tab-tab"
                                data-bs-toggle="tab"
                                data-bs-target="#tab-@tab"
                                type="button" role="tab">
                            分頁 @tab
                        </button>
                    </li>
                }
            </ul>

                <!-- ✅ Tabs 對應內容 -->
              <div class="tab-content" id="headerTabContent">
                    @foreach (var tab in groupedTabs)
                    {
                        <div class="tab-pane fade @(tab.Key == 1 ? "show active" : "")"
                            id="tab-@tab.Key" role="tabpanel">
                            <ul class="list-unstyled header-fields-tab"
                                data-tab-index="@tab.Key"
                                style="position: relative; min-height: 400px;">
                               @foreach (var field in tab.Value)
                                {
                                    object rawValue = null;
                                    headerData?.TryGetValue(field.FieldName, out rawValue);
                                    string displayText = "";

                                    // 1. lookup 優先顯示
                                    if (headerLookupMap != null && headerLookupMap.TryGetValue(field.FieldName, out var lookupVal))
                                    {
                                        displayText = lookupVal;
                                    }
                                    else if (rawValue != null)
                                    {
                                        if (!string.IsNullOrEmpty(field.FormatStr))
                                        {
                                            // 日期格式
                                            if (field.DataType?.ToLower() == "date" && rawValue is DateTime dt)
                                            {
                                                // nn 轉 mm
                                                displayText = dt.ToString(field.FormatStr.Replace("nn", "mm"));
                                            }
                                            // 數字格式
                                            else if (field.DataType?.ToLower() == "number" && rawValue is IFormattable fmt)
                                            {
                                                displayText = fmt.ToString(field.FormatStr, null);
                                            }
                                            else
                                            {
                                                displayText = rawValue.ToString();
                                            }
                                        }
                                        else
                                        {
                                            displayText = rawValue.ToString();
                                        }
                                    }

                                    var top = field.iFieldTop ?? 0;
                                    var left = field.iFieldLeft ?? 0;
                                    var width = field.iFieldWidth ?? 160;
                                    var height = field.iFieldHeight ?? 44;

                                    <li class="draggable-field"
                                        data-field="@field.FieldName"
                                        data-tab="@tab.Key"
                                        style="top:@(top)px; left:@(left)px; width:@(width)px; height:@(height)px;">
                                        <label>@field.DisplayLabel</label>
                                        <textarea class="form-control resizable-input"
                                                name="@field.FieldName">@displayText</textarea>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
        </div>
        <button type="submit" class="btn btn-primary">儲存單頭</button>
    </form>
    <!-- 單身明細 table -->
    <div class="erp-table-wrapper">
        <table class="erp-table">
            <thead>
                <tr>
                    @foreach(var col in fields)
                    {
                        <th>@col.DisplayLabel</th>
                    }
                </tr>
            </thead>
            <tbody>
                    @if (items != null)
                    {
                        var index = 1;
                        foreach (var item in items)
                        {
                            <tr>
                                @foreach(var col in fields)
                                {
                                    object v = "";
                                    if (item is IDictionary<string, object> dict)
                                        dict.TryGetValue(col.FieldName, out v);
                                    else if (item is System.Dynamic.ExpandoObject exp)
                                    {
                                        var expDict = (IDictionary<string, object>)exp;
                                        expDict.TryGetValue(col.FieldName, out v);
                                    }
                                    else
                                    {
                                        var prop = item.GetType().GetProperty(col.FieldName);
                                        v = prop != null ? prop.GetValue(item, null) : "";
                                    }
                                    // lookup display
                                    var paperNum = item.GetType().GetProperty("PaperNum")?.GetValue(item, null)?.ToString();
                                    var itemNo = item.GetType().GetProperty("Item")?.GetValue(item, null)?.ToString();
                                    var rowKey = $"{paperNum}_{itemNo}";
                                    string display = null;
                                    if (lookupMap != null && lookupMap.TryGetValue(rowKey, out var dict2))
                                    {
                                        dict2.TryGetValue(col.FieldName, out display);
                                    }
                                    <td>
                                        @(display ?? (v is DateTime dt ? dt.ToString("yyyy/MM/dd") : v?.ToString()))
                                    </td>
                                }
                            </tr>
                            index++;
                        }
                    }
                    </tbody>

        </table>
    </div>
</div>
<!-- SweetAlert2 for提示 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
<script>
    document.getElementById('orderHeaderForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        const formData = Object.fromEntries(new FormData(this));
        // 你自己的儲存API路徑
        const resp = await fetch('/api/OrderHeaderApi', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData)
        });
        if(resp.ok) {
            Swal.fire({ icon: 'success', title: '儲存成功！' });
        } else {
            let msg = '儲存失敗';
            try {
                let result = await resp.json();
                if (result.error) msg = result.error;
            } catch {}
            Swal.fire({ icon: 'error', title: msg });
        }
    });

    $(function () {
    let debounceTimer;

    function debounceSave() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(saveLayoutChanges, 400);
    }

    function saveLayoutChanges() {
        const layout = [];

        // ✅ 暫時顯示所有 tab-pane
        const hiddenTabs = $(".tab-pane").not(".show");
        hiddenTabs.addClass("temporary-show").addClass("show").css("display", "block");

        $(".draggable-field").each(function () {
            const $li = $(this);
            const field = $li.data("field");
            const tabIndex = parseInt($li.attr("data-tab")) || 1;

            layout.push({
                fieldName: field,
                top: Math.round($li.position().top),
                left: Math.round($li.position().left),
                width: Math.round($li.outerWidth()),
                height: Math.round($li.outerHeight()),
                ishowWhere: tabIndex
            });
        });

        // ✅ 還原 tab-pane 狀態
        hiddenTabs.removeClass("show").removeClass("temporary-show").css("display", "");

        if (layout.length === 0) return;

        fetch("/api/TableFieldLayout/SaveHeaderLayout", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                tableName: "@Model.HeaderTableName".toLowerCase(),
                layoutUpdates: layout
            })
        }).catch(err => console.error("儲存失敗", err));
    }

    $(".draggable-field").each(function () {
        const $li = $(this);

        $li.draggable({
            handle: "label",
            helper: function () {
                return $("<div>")
                    .text($(this).find("label").text())
                    .css({
                        width: "80px",
                        height: "55px",
                        background: "#eef",
                        border: "1px dashed #999",
                        padding: "4px",
                        "font-size": "0.9em"
                    });
            },
            appendTo: "body",
            zIndex: 10000,
            start: function () {
                $(this).hide(); // ✅ 拖曳時原本隱藏，避免混淆
            },
            stop: function () {
                $(this).show();
            }
        });

        $li.resizable({
            handles: "se",
            minWidth: 50,
            minHeight: 30,
            stop: debounceSave
        });
    });

    $(".header-fields-tab").droppable({
        accept: ".draggable-field",
        tolerance: "pointer", //intersect是要物件中心點拖到才會觸發，改成游標觸碰
        over: function () {
            $(this).addClass("drop-hover");
        },
        out: function () {
            $(this).removeClass("drop-hover");
        },     
        drop: function (event, ui) {
            $(this).removeClass("drop-hover");
            const $dropZone = $(this);
            const $item = $(ui.draggable);
            const newTabIndex = parseInt($dropZone.data("tab-index")) || 1;

            // ➤ 移動 item 並更新屬性與位置
            $item.appendTo($dropZone);
            $item.attr("data-tab", newTabIndex);

            $item.css({
                top: ui.offset.top - $dropZone.offset().top,
                left: ui.offset.left - $dropZone.offset().left,
                position: "absolute"
            });

            debounceSave();
        }
    });


    let dragTabSwitchTimer = null;

    $("#headerTabs button").droppable({
        accept: ".draggable-field",
        over: function (event, ui) {
            const $tabBtn = $(this);
            dragTabSwitchTimer = setTimeout(() => {
                $tabBtn.trigger("click");
            }, 600); // 滑過 600ms 自動切換分頁
        },
        out: function () {
            clearTimeout(dragTabSwitchTimer);
        }
    });

});


</script>
<style>
body {
    background: #f7f9fb !important;
}

#header-fields {
    position: relative;
    min-height: 300px;
    background: rgba(0,0,0,0.03); /* 開發階段用來看邊界 */
}

.erp-detail-container {
    /* 只保留 spacing，不要再設 background 顏色 */
    min-height: 100vh;
    padding: 32px 0;
    margin-left: 3vw;
    margin-right: 3vw;
}

.erp-title {
    font-size: 1.6em;
    font-weight: 700;
    color: #235eb8;
    margin-bottom: 22px;
    padding-left: 18px;
    letter-spacing: 3px;
}
.erp-table-wrapper {
    background: #fff;
    border-radius: 13px;
    box-shadow: 0 4px 18px 0 #c3d4e6;
    padding: 24px 32px 16px 32px;
    margin: 0 auto 32px auto;
    max-width: 1400px;
    overflow-x: auto;
}
.erp-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    font-size: 1.06em;
    background: #fff;
}
.erp-table thead tr {
    background: #e7ecf3;
}
.erp-table th, .erp-table td {
    padding: 7px 12px;
    border-bottom: 1px solid #c5d1e4;
    white-space: nowrap;
    text-align: center;
    font-weight: 500;
    border-right: 1px solid #dde4ed;
}
.erp-table th:last-child, .erp-table td:last-child {
    border-right: none;
}

.erp-table th {
    color: #124d8b;
    font-weight: 700;
    font-size: 1.05em;
    letter-spacing: 1px;
    background: #e7ecf3;
}
.erp-table tbody tr:nth-child(even) {
    background: #f6f9fd;
}
.erp-table tbody tr:hover {
    background: #eef7ff;
}
.highlight-red {
    color: #e53b2d;
    font-weight: 700;
}
.highlight-blue {
    color: #2564b3;
    font-weight: 700;
}

.draggable-field {
    position: absolute;
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    overflow: hidden;
    background: transparent;
}

.draggable-field label {
    cursor: move;
    font-size: 0.85em;
    margin-bottom: 2px;
    flex-shrink: 0;
}

textarea.resizable-input {
    flex-grow: 1;
    width: 100%;
    height: 100%;
    resize: none; /* 禁用 textarea 本身的 resize */
    box-sizing: border-box;
    padding: 4px 6px;
    font-size: 0.9em;
}

.header-fields-tab {
    position: relative;
    min-height: 300px;
    background: rgba(0,0,0,0.03);
}

.drop-hover {
    background-color: #cce5ff !important;
    border-radius: 4px;
}

.nav-link.drag-hover {
    background-color: #f3faff;
    font-weight: bold;
}

</style>
