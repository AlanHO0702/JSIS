@model dynamic
@{
    // 單頭欄位
    var headerFields = Model.HeaderTableFields; // 可視欄位
    var headerData = Model.HeaderData; // 單頭資料 (Dictionary<string, object> 或你的單頭Model)
    // 單身
    var fields = Model.TableFields;
    var items = Model.Items;
    var tableTitle = ViewData["TableTitle"] as string ?? "";
    var showRowNumber = ViewData["ShowRowNumber"] as bool? ?? true;
}
<div class="erp-detail-container">
    <div class="erp-title">
        @tableTitle
    </div>
        <!-- 單頭可編輯表單 -->
    <form id="orderHeaderForm" class="erp-header-form mb-4">
        <div class="row">
            <ul id="header-fields" class="row list-unstyled">
                @foreach (var field in headerFields)
                {
                    object v;
                    var val = headerData.TryGetValue(field.FieldName, out v) ? v : "";
                    var width = field.iFieldWidth ?? 160; // 若未設定則預設寬度

                    <li class="col-md-2 mb-2 draggable-field"
                        data-field="@field.FieldName"
                        style="resize: horizontal; overflow: auto; width:@(field.iFieldWidth ?? 160)px;">
                        <label>@field.DisplayLabel</label>
                        <input type="text" class="form-control" name="@field.FieldName" value="@val" />
                    </li>

                }
            </ul>

        </div>
        <button type="submit" class="btn btn-primary">儲存單頭</button>
    </form>

    <!-- 單身明細 table -->
    <div class="erp-table-wrapper">
        <table class="erp-table">
            <thead>
                <tr>
                    @foreach(var col in fields)
                    {
                        <th>@col.DisplayLabel</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (items != null)
                {
                    var index = 1;
                    foreach (var item in items)
                    {
                        <tr>
                            @if (showRowNumber)
                            {
                                <td>@index</td>
                            }
                                @foreach(var col in fields)
                                {
                                    object v = "";
                                    // 如果 item 是 Dictionary<string, object>
                                    if (item is IDictionary<string, object> dict)
                                    {
                                        dict.TryGetValue(col.FieldName, out v);
                                    }
                                    // 如果 item 是 ExpandoObject
                                    else if (item is System.Dynamic.ExpandoObject exp)
                                    {
                                        var expDict = (IDictionary<string, object>)exp;
                                        expDict.TryGetValue(col.FieldName, out v);
                                    }
                                    // 如果 item 是強型別物件
                                    else
                                    {
                                        var prop = item.GetType().GetProperty(col.FieldName);
                                        v = prop != null ? prop.GetValue(item, null) : "";
                                    }
                                    <td>
                                        @(v is DateTime dt ? dt.ToString("yyyy/MM/dd") : v)
                                    </td>
                                }

                        </tr>
                        index++;
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<!-- SweetAlert2 for提示 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />
<script>
    document.getElementById('orderHeaderForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        const formData = Object.fromEntries(new FormData(this));
        // 你自己的儲存API路徑
        const resp = await fetch('/api/OrderHeaderApi', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formData)
        });
        if(resp.ok) {
            Swal.fire({ icon: 'success', title: '儲存成功！' });
        } else {
            let msg = '儲存失敗';
            try {
                let result = await resp.json();
                if (result.error) msg = result.error;
            } catch {}
            Swal.fire({ icon: 'error', title: msg });
        }
    });

 $(function () {
    $("#header-fields").sortable({
        handle: "label", // 只允許拖曳 label
        update: function () {
            saveLayoutChanges();
        }
    });

    // 當欄位 resize 結束時儲存寬度
    $(".draggable-field").on("mouseup", function () {
        saveLayoutChanges();
    });

    function saveLayoutChanges() {
        const layout = [];
        $("#header-fields .draggable-field").each(function () {
            const field = $(this).data("field");
            const width = Math.round($(this).outerWidth());

            if (field && typeof field === "string" && field.trim() !== "") {
                layout.push({ fieldName: field, width: width });
            }
        });

        if (layout.length === 0) return;

        console.log("🔧 Layout Updates:", layout); // ✅ 除錯用

        const currentTableName = "@Model.HeaderTableName".toLowerCase();

        fetch("/api/TableFieldLayout/SaveHeaderLayout", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
            tableName: currentTableName, // ⚠ 動態傳入你的 TableName
            layoutUpdates: layout
        })
        })
        .then(res => {
            if (!res.ok) {
                Swal.fire("儲存失敗", "", "error");
            }
        })
        .catch(err => {
            console.error("儲存失敗", err);
        });
    }


});

</script>
<style>
body {
    background: #f7f9fb !important;
}

.draggable-field label {
    cursor: move;
}

.erp-detail-container {
    /* 只保留 spacing，不要再設 background 顏色 */
    min-height: 100vh;
    padding: 32px 0;
    margin-left: 3vw;
    margin-right: 3vw;
}

.erp-title {
    font-size: 1.6em;
    font-weight: 700;
    color: #235eb8;
    margin-bottom: 22px;
    padding-left: 18px;
    letter-spacing: 3px;
}
.erp-table-wrapper {
    background: #fff;
    border-radius: 13px;
    box-shadow: 0 4px 18px 0 #c3d4e6;
    padding: 24px 32px 16px 32px;
    margin: 0 auto 32px auto;
    max-width: 1400px;
    overflow-x: auto;
}
.erp-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    font-size: 1.06em;
    background: #fff;
}
.erp-table thead tr {
    background: #e7ecf3;
}
.erp-table th, .erp-table td {
    padding: 7px 12px;
    border-bottom: 1px solid #c5d1e4;
    white-space: nowrap;
    text-align: center;
    font-weight: 500;
    border-right: 1px solid #dde4ed;
}
.erp-table th:last-child, .erp-table td:last-child {
    border-right: none;
}

.erp-table th {
    color: #124d8b;
    font-weight: 700;
    font-size: 1.05em;
    letter-spacing: 1px;
    background: #e7ecf3;
}
.erp-table tbody tr:nth-child(even) {
    background: #f6f9fd;
}
.erp-table tbody tr:hover {
    background: #eef7ff;
}
.highlight-red {
    color: #e53b2d;
    font-weight: 700;
}
.highlight-blue {
    color: #2564b3;
    font-weight: 700;
}
</style>
