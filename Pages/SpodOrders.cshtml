@page
@model SpodOrdersModel
@{
    ViewData["DictModalId"] = "dictModal";
    ViewData["DictTableName"] = "SpodOrderMain";
    var paginationVm = new PaginationModel {
        PageNumber = Model.PageNumber,
        TotalPages = Model.TotalPages,
        RouteUrl = "/SPOdOrders",         // 換成你自己的頁面/路徑
        PageParameterName = "page"        // 預設就是 page
    };
}
<style>
    body { background: #f7f9fb; }
    .container { max-width: 1100px; }
    .title-row { display: flex; justify-content: space-between; align-items: flex-end; }
    .order-count { font-size: 1rem; color: #666; margin-bottom: 6px; }
    .table { box-shadow: 0 2px 12px 0 #c3d4e6; border-radius: 16px; overflow: hidden; background: #fff; }
    .table th, .table td { vertical-align: middle !important; white-space: nowrap; font-size: 1rem; border: none; }
    .table th {
        background: linear-gradient(90deg, #e8f2fe 0%, #f3f8ff 100%);
        color: #2056ac; letter-spacing: 2px; font-weight: 600;
        border-bottom: 2px solid #bdd2f7; padding: 14px 10px;
    }
    .table tbody tr { transition: background .15s; }
    .table tbody tr:hover { background: #f0f8ff !important; }
    .table td { border-top: 1px solid #f0f3f7 !important; padding: 11px 10px; }
    .status-done { color: #29963b; background: #e5f7e6; border-radius: 8px; padding: 2px 10px; font-weight: bold; letter-spacing: 1px; font-size: 1.05em;}
    .status-pending { color: #c88400; background: #fff9e3; border-radius: 8px; padding: 2px 10px; font-weight: bold; letter-spacing: 1px; font-size: 1.05em;}
    .row-link { cursor: pointer; }
    .pagination-bar { margin: 20px 0 30px 0; }
    .pagination .page-link { color: #3a72d9; border-radius: 6px !important; margin: 0 2px; }
    .pagination .page-item.active .page-link { background: #3a72d9; color: #fff; border: none; }
    .pagination .page-item.disabled .page-link { color: #aaa; pointer-events: none; background: #f1f4f8; }
    .table-wrap {
        max-width: 100%;            /* 不會超過container寬 */
        overflow-x: auto;           /* 超過寬度自動出現橫向捲軸 */
        margin: 0 auto;             /* 水平置中 */
        background: #fff;           /* 可視需求 */
        border-radius: 16px;
        box-shadow: 0 2px 12px 0 #c3d4e6;
    }
    .table {
        min-width: 1200px;          /* 最小寬，根據欄位數量調整 */
        margin-bottom: 0;
    }

</style>

<div class="container my-5">
    <div class="title-row mb-4 border-bottom pb-2">
        <h2 class="mb-0 text-primary" style="font-weight:700;letter-spacing:3px;">銷售訂單列表</h2>
        <span class="order-count">
            共 <span style="font-weight:bold">@Model.TotalCount</span> 筆，
            顯示第 @(((Model.PageNumber - 1) * Model.PageSize) + 1)
            ~ @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)) 筆
        </span>
    </div>
    <div class="table-wrap">
        <table class="table table-hover align-middle text-center">
            <thead>
                <tr>
                    @foreach(var field in Model.TableFields)
                    {
                        <th>@(string.IsNullOrWhiteSpace(field.DisplayLabel) ? field.FieldName : field.DisplayLabel)</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach(var order in Model.Orders)
                {
                    <tr class="row-link" data-url="/SpodOrderSubs/@order.PaperNum">
                        @foreach(var field in Model.TableFields)
                        {
                            // 用反射讀出欄位值（欄位名不寫死）
                            var val = order.GetType().GetProperty(field.FieldName)?.GetValue(order, null);
                            <td>@val</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="pagination-bar">
        @await Html.PartialAsync("_PaginationPartial", paginationVm)
    </div>
</div>

@await Html.PartialAsync("_FieldDictModal", Model.FieldDictList, ViewData)

<script src="~/js/fieldDictModal.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".row-link").forEach(function(row) {
        row.addEventListener("click", function() {
            var url = row.getAttribute("data-url");
            if(url) window.location = url;
        });
    });
});
</script>
